import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,a as i}from"./app-CFiaopWh.js";const s="/assets/image/k8s-release-strategy/recreate.png",l="/assets/image/k8s-release-strategy/rolling-update.png",n="/assets/image/k8s-release-strategy/blue-green.png",r="/assets/image/k8s-release-strategy/canary.png",g="/assets/image/k8s-release-strategy/a-b-test.jpg",o={},c=i('<h1 id="k8s应用发布策略" tabindex="-1"><a class="header-anchor" href="#k8s应用发布策略"><span>K8S应用发布策略</span></a></h1><h2 id="重建部署" tabindex="-1"><a class="header-anchor" href="#重建部署"><span>重建部署</span></a></h2><ul><li>定义：重建部署是最简单的发布策略</li><li>部署方式：先停止并删除旧版本容器，再创建并启动新版本容器，部署中会导致应用程序短暂不可用</li><li>适用场景：无需保证应用持续可用，例如开发环境</li></ul><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="滚动更新" tabindex="-1"><a class="header-anchor" href="#滚动更新"><span>滚动更新</span></a></h2><ul><li>定义：滚动更新是一种逐步替换旧容器的策略</li><li>部署方式：逐步将新版本的容器添加到集群中，同时逐步删除旧版本的容器</li><li>适用场景：确保应用程序持续可用</li></ul><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="蓝绿部署" tabindex="-1"><a class="header-anchor" href="#蓝绿部署"><span>蓝绿部署</span></a></h2><ul><li>定义：蓝绿部署是一种将新版本应用与旧版本应用完全隔离的策略</li><li>部署方式：先在集群中部署一个与旧版本完全独立的新版本环境（绿色环境）中运行并进行验证。然后，通过将流量从旧环境（蓝色环境）切换到新环境来进行更新</li><li>适用场景：应用程序的无缝升级</li></ul><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="金丝雀部署" tabindex="-1"><a class="header-anchor" href="#金丝雀部署"><span>金丝雀部署</span></a></h2><ul><li>定义：金丝雀部署是一种逐步引入新版本应用的策略，以限制潜在问题的影响范围</li><li>部署方式：将一小部分流量路由到新版本应用，而大部分流量仍然路由到旧版本应用。通过监测新版本的性能和稳定性，可以逐步增加流量份额，直到完全切换到新版本</li><li>适用场景：在应用早期阶段发现和解决潜在问题，减轻对整个用户群体的影响</li></ul><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="a-b测试" tabindex="-1"><a class="header-anchor" href="#a-b测试"><span>A/B测试</span></a></h2><ul><li>定义：A/B测试是一种用于比较不同版本应用程序的部署策略</li><li>部署方式：使用K8S的服务发现和负载均衡功能，将一部分用户或流量请求路由到B版本的应用，而其余用户或流量请求仍然路由到A版本的应用</li><li>适用场景：分析、评估不同版本应用程序的性能指标、用户反馈</li></ul><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',16),p=[c];function d(h,u){return a(),t("div",null,p)}const y=e(o,[["render",d],["__file","k8s-release-strategy.html.vue"]]),k=JSON.parse(`{"path":"/dump/cloud-native/kubernetes/k8s-release-strategy.html","title":"K8S应用发布策略","lang":"zh-CN","frontmatter":{"description":"K8S应用发布策略 重建部署 定义：重建部署是最简单的发布策略 部署方式：先停止并删除旧版本容器，再创建并启动新版本容器，部署中会导致应用程序短暂不可用 适用场景：无需保证应用持续可用，例如开发环境 滚动更新 定义：滚动更新是一种逐步替换旧容器的策略 部署方式：逐步将新版本的容器添加到集群中，同时逐步删除旧版本的容器 适用场景：确保应用程序持续可用 蓝...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/dump/cloud-native/kubernetes/k8s-release-strategy.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"K8S应用发布策略"}],["meta",{"property":"og:description","content":"K8S应用发布策略 重建部署 定义：重建部署是最简单的发布策略 部署方式：先停止并删除旧版本容器，再创建并启动新版本容器，部署中会导致应用程序短暂不可用 适用场景：无需保证应用持续可用，例如开发环境 滚动更新 定义：滚动更新是一种逐步替换旧容器的策略 部署方式：逐步将新版本的容器添加到集群中，同时逐步删除旧版本的容器 适用场景：确保应用程序持续可用 蓝..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://guoxicheng.top/assets/image/k8s-release-strategy/recreate.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-21T06:52:13.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-21T06:52:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"K8S应用发布策略\\",\\"image\\":[\\"https://guoxicheng.top/assets/image/k8s-release-strategy/recreate.png\\",\\"https://guoxicheng.top/assets/image/k8s-release-strategy/rolling-update.png\\",\\"https://guoxicheng.top/assets/image/k8s-release-strategy/blue-green.png\\",\\"https://guoxicheng.top/assets/image/k8s-release-strategy/canary.png\\",\\"https://guoxicheng.top/assets/image/k8s-release-strategy/a-b-test.jpg\\"],\\"dateModified\\":\\"2024-06-21T06:52:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"重建部署","slug":"重建部署","link":"#重建部署","children":[]},{"level":2,"title":"滚动更新","slug":"滚动更新","link":"#滚动更新","children":[]},{"level":2,"title":"蓝绿部署","slug":"蓝绿部署","link":"#蓝绿部署","children":[]},{"level":2,"title":"金丝雀部署","slug":"金丝雀部署","link":"#金丝雀部署","children":[]},{"level":2,"title":"A/B测试","slug":"a-b测试","link":"#a-b测试","children":[]}],"git":{"createdTime":1689400582000,"updatedTime":1718952733000},"readingTime":{"minutes":1.79,"words":537},"filePathRelative":"dump/cloud-native/kubernetes/k8s-release-strategy.md","localizedDate":"2023年7月15日","autoDesc":true,"excerpt":"\\n<h2>重建部署</h2>\\n<ul>\\n<li>定义：重建部署是最简单的发布策略</li>\\n<li>部署方式：先停止并删除旧版本容器，再创建并启动新版本容器，部署中会导致应用程序短暂不可用</li>\\n<li>适用场景：无需保证应用持续可用，例如开发环境</li>\\n</ul>\\n<figure><img src=\\"/assets/image/k8s-release-strategy/recreate.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<h2>滚动更新</h2>\\n<ul>\\n<li>定义：滚动更新是一种逐步替换旧容器的策略</li>\\n<li>部署方式：逐步将新版本的容器添加到集群中，同时逐步删除旧版本的容器</li>\\n<li>适用场景：确保应用程序持续可用</li>\\n</ul>"}`);export{y as comp,k as data};
