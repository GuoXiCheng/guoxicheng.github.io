import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,a as i}from"./app-BnkE1q2u.js";const n={},o=i('<h1 id="事务隔离级别" tabindex="-1"><a class="header-anchor" href="#事务隔离级别"><span>事务隔离级别</span></a></h1><h2 id="事务隔离的目的" tabindex="-1"><a class="header-anchor" href="#事务隔离的目的"><span>事务隔离的目的</span></a></h2><p>事务的隔离级别决定了一个事务所做的修改何时对其他事务可见，以及一个事务何时可以看到其他事务的修改。</p><p>事务的隔离级别越高，事务的并发性越低，但是数据的一致性越好。</p><h2 id="读未提交-read-uncommitted" tabindex="-1"><a class="header-anchor" href="#读未提交-read-uncommitted"><span>读未提交（Read Uncommitted）</span></a></h2><p>一个事务可以读取到其他事务未提交的数据。</p><h2 id="读已提交-read-committed" tabindex="-1"><a class="header-anchor" href="#读已提交-read-committed"><span>读已提交（Read Committed）</span></a></h2><p>一个事务只能读取到其他事务已提交的数据。</p><h2 id="可重复读-repeatable-read" tabindex="-1"><a class="header-anchor" href="#可重复读-repeatable-read"><span>可重复读（Repeatable Read）</span></a></h2><p>保证在同一个事务中多次读取同一行数据时，读取到的数据是一致的。</p><h2 id="串行化-serializable" tabindex="-1"><a class="header-anchor" href="#串行化-serializable"><span>串行化（Serializable）</span></a></h2><p>保证事务串行执行。</p>',12),d=[o];function l(r,p){return a(),t("div",null,d)}const m=e(n,[["render",l],["__file","transaction-isolation-level.html.vue"]]),h=JSON.parse(`{"path":"/develop/database/transaction-isolation-level.html","title":"事务隔离级别","lang":"zh-CN","frontmatter":{"date":"2024-03-05T00:00:00.000Z","description":"事务隔离级别 事务隔离的目的 事务的隔离级别决定了一个事务所做的修改何时对其他事务可见，以及一个事务何时可以看到其他事务的修改。 事务的隔离级别越高，事务的并发性越低，但是数据的一致性越好。 读未提交（Read Uncommitted） 一个事务可以读取到其他事务未提交的数据。 读已提交（Read Committed） 一个事务只能读取到其他事务已提交...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/develop/database/transaction-isolation-level.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"事务隔离级别"}],["meta",{"property":"og:description","content":"事务隔离级别 事务隔离的目的 事务的隔离级别决定了一个事务所做的修改何时对其他事务可见，以及一个事务何时可以看到其他事务的修改。 事务的隔离级别越高，事务的并发性越低，但是数据的一致性越好。 读未提交（Read Uncommitted） 一个事务可以读取到其他事务未提交的数据。 读已提交（Read Committed） 一个事务只能读取到其他事务已提交..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T08:48:17.000Z"}],["meta",{"property":"article:published_time","content":"2024-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-05T08:48:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务隔离级别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-05T08:48:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"事务隔离的目的","slug":"事务隔离的目的","link":"#事务隔离的目的","children":[]},{"level":2,"title":"读未提交（Read Uncommitted）","slug":"读未提交-read-uncommitted","link":"#读未提交-read-uncommitted","children":[]},{"level":2,"title":"读已提交（Read Committed）","slug":"读已提交-read-committed","link":"#读已提交-read-committed","children":[]},{"level":2,"title":"可重复读（Repeatable Read）","slug":"可重复读-repeatable-read","link":"#可重复读-repeatable-read","children":[]},{"level":2,"title":"串行化（Serializable）","slug":"串行化-serializable","link":"#串行化-serializable","children":[]}],"git":{"createdTime":1709628497000,"updatedTime":1709628497000},"readingTime":{"minutes":0.63,"words":188},"filePathRelative":"develop/database/transaction-isolation-level.md","localizedDate":"2024年3月5日","autoDesc":true,"excerpt":"\\n<h2>事务隔离的目的</h2>\\n<p>事务的隔离级别决定了一个事务所做的修改何时对其他事务可见，以及一个事务何时可以看到其他事务的修改。</p>\\n<p>事务的隔离级别越高，事务的并发性越低，但是数据的一致性越好。</p>\\n<h2>读未提交（Read Uncommitted）</h2>\\n<p>一个事务可以读取到其他事务未提交的数据。</p>\\n<h2>读已提交（Read Committed）</h2>\\n<p>一个事务只能读取到其他事务已提交的数据。</p>\\n<h2>可重复读（Repeatable Read）</h2>\\n<p>保证在同一个事务中多次读取同一行数据时，读取到的数据是一致的。</p>"}`);export{m as comp,h as data};
