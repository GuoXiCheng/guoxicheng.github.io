import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,o,b as t}from"./app-AYg0EWYb.js";const s={},a=t("h1",{id:"state和props",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#state和props"},[t("span",null,"state和props")])],-1),r=t("p",null,"state和props都是React中用于管理组件状态和控制组件行为的属性。",-1),n=t("p",null,"state是用于组件内部管理自身状态的。可以通过setState方法改变状态，触发重新渲染，并且setState还可以接收第二个参数，是一个可选的回调函数，会在组件重新渲染后被调用，通常用于在状态更新后执行一些额外的逻辑。",-1),c=t("p",null,"props是用于单向数据流中，父组件向子组件传递数据，并且在子组件中是不可改变的，只能通过传递新的props来触发重新渲染。",-1),i=[a,r,n,c];function d(l,m){return o(),p("div",null,i)}const u=e(s,[["render",d],["__file","state和props.html.vue"]]),g=JSON.parse(`{"path":"/dump/knowledge/state%E5%92%8Cprops.html","title":"state和props","lang":"zh-CN","frontmatter":{"description":"state和props state和props都是React中用于管理组件状态和控制组件行为的属性。 state是用于组件内部管理自身状态的。可以通过setState方法改变状态，触发重新渲染，并且setState还可以接收第二个参数，是一个可选的回调函数，会在组件重新渲染后被调用，通常用于在状态更新后执行一些额外的逻辑。 props是用于单向数据流中...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/dump/knowledge/state%E5%92%8Cprops.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"state和props"}],["meta",{"property":"og:description","content":"state和props state和props都是React中用于管理组件状态和控制组件行为的属性。 state是用于组件内部管理自身状态的。可以通过setState方法改变状态，触发重新渲染，并且setState还可以接收第二个参数，是一个可选的回调函数，会在组件重新渲染后被调用，通常用于在状态更新后执行一些额外的逻辑。 props是用于单向数据流中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-13T07:17:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-13T07:17:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"state和props\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-13T07:17:20.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1697638485000,"updatedTime":1718263040000},"readingTime":{"minutes":0.55,"words":164},"filePathRelative":"dump/knowledge/state和props.md","localizedDate":"2023年10月18日","autoDesc":true,"excerpt":"\\n<p>state和props都是React中用于管理组件状态和控制组件行为的属性。</p>\\n<p>state是用于组件内部管理自身状态的。可以通过setState方法改变状态，触发重新渲染，并且setState还可以接收第二个参数，是一个可选的回调函数，会在组件重新渲染后被调用，通常用于在状态更新后执行一些额外的逻辑。</p>\\n<p>props是用于单向数据流中，父组件向子组件传递数据，并且在子组件中是不可改变的，只能通过传递新的props来触发重新渲染。</p>\\n"}`);export{u as comp,g as data};
