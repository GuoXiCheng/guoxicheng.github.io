import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o,a as n}from"./app-CFiaopWh.js";const r={},a=n('<h1 id="选择排序" tabindex="-1"><a class="header-anchor" href="#选择排序"><span>选择排序</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>首先，找到数组中最小的元素并与数组第一个位置的元素交换。然后，在剩余的元素中找到最小的元素与数组的第二个位置交换。重复这个过程直到数组有序。</p><p>这种方法叫做选择排序，因为它不断地在数组中选择最小的元素。</p><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><p><strong>运行时间和输入无关。</strong></p><p>为找出最小的元素而扫描一次数组并不能为下一次扫描提供什么信息。一个有序数组的执行时间和一个完全随机的数组的执行时间一样长。</p><p><strong>数据移动是最少的。</strong></p><p>选择排序每次交换都会改变两个数组元素的值，因此需要 N 次交换。</p><p>交换的次数和数组的大小是线性关系。</p>',10),p=[a];function s(i,c){return o(),e("div",null,p)}const d=t(r,[["render",s],["__file","selection-sort.html.vue"]]),m=JSON.parse(`{"path":"/dump/algorithm/sort/selection-sort.html","title":"选择排序","lang":"zh-CN","frontmatter":{"description":"选择排序 介绍 首先，找到数组中最小的元素并与数组第一个位置的元素交换。然后，在剩余的元素中找到最小的元素与数组的第二个位置交换。重复这个过程直到数组有序。 这种方法叫做选择排序，因为它不断地在数组中选择最小的元素。 特点 运行时间和输入无关。 为找出最小的元素而扫描一次数组并不能为下一次扫描提供什么信息。一个有序数组的执行时间和一个完全随机的数组的执...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/dump/algorithm/sort/selection-sort.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"选择排序"}],["meta",{"property":"og:description","content":"选择排序 介绍 首先，找到数组中最小的元素并与数组第一个位置的元素交换。然后，在剩余的元素中找到最小的元素与数组的第二个位置交换。重复这个过程直到数组有序。 这种方法叫做选择排序，因为它不断地在数组中选择最小的元素。 特点 运行时间和输入无关。 为找出最小的元素而扫描一次数组并不能为下一次扫描提供什么信息。一个有序数组的执行时间和一个完全随机的数组的执..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T06:47:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-12T06:47:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"选择排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-12T06:47:27.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]}],"git":{"createdTime":1704529880000,"updatedTime":1718174847000},"readingTime":{"minutes":0.73,"words":220},"filePathRelative":"dump/algorithm/sort/selection-sort.md","localizedDate":"2024年1月6日","autoDesc":true,"excerpt":"\\n<h2>介绍</h2>\\n<p>首先，找到数组中最小的元素并与数组第一个位置的元素交换。然后，在剩余的元素中找到最小的元素与数组的第二个位置交换。重复这个过程直到数组有序。</p>\\n<p>这种方法叫做选择排序，因为它不断地在数组中选择最小的元素。</p>\\n<h2>特点</h2>\\n<p><strong>运行时间和输入无关。</strong></p>\\n<p>为找出最小的元素而扫描一次数组并不能为下一次扫描提供什么信息。一个有序数组的执行时间和一个完全随机的数组的执行时间一样长。</p>\\n<p><strong>数据移动是最少的。</strong></p>\\n<p>选择排序每次交换都会改变两个数组元素的值，因此需要 N 次交换。</p>"}`);export{d as comp,m as data};
