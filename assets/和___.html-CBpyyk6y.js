import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as p,a as n}from"./app-ClyRY-uV.js";const a={},o=n('<h1 id="和" tabindex="-1"><a class="header-anchor" href="#和"><span>==和===</span></a></h1><p>相等操作符存在隐式类型转换，在比较前会先进行类型转换再进行比较</p><p>例如</p><p>比较字符串和布尔值，会转换为数值再比较</p><p>比较基本类型和引用类型，会调用引用类型的valueOf获取其原始值再进行比较</p><p>比较引用类型，会比较其引用指向的内存地址是否相同</p><p>比较null和undefined会返回true</p><p>如果比较存在NaN，则会返回false</p><p>全等操作符不存在类型转换，它是严格相等的，既要类型相同，也要值相同</p><p>全等操作符因为在使用时存在隐式类型转换，可能暗含一些漏洞，所以在比较null和undefined时适合使用相等，其余情况下适合使用全等</p>',10),r=[o];function l(d,i){return p(),t("div",null,r)}const u=e(a,[["render",l],["__file","和___.html.vue"]]),m=JSON.parse(`{"path":"/dump/knowledge/%E5%92%8C___.html","title":"==和===","lang":"zh-CN","frontmatter":{"description":"==和=== 相等操作符存在隐式类型转换，在比较前会先进行类型转换再进行比较 例如 比较字符串和布尔值，会转换为数值再比较 比较基本类型和引用类型，会调用引用类型的valueOf获取其原始值再进行比较 比较引用类型，会比较其引用指向的内存地址是否相同 比较null和undefined会返回true 如果比较存在NaN，则会返回false 全等操作符不存...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/dump/knowledge/%E5%92%8C___.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"==和==="}],["meta",{"property":"og:description","content":"==和=== 相等操作符存在隐式类型转换，在比较前会先进行类型转换再进行比较 例如 比较字符串和布尔值，会转换为数值再比较 比较基本类型和引用类型，会调用引用类型的valueOf获取其原始值再进行比较 比较引用类型，会比较其引用指向的内存地址是否相同 比较null和undefined会返回true 如果比较存在NaN，则会返回false 全等操作符不存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-13T07:17:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-13T07:17:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"==和===\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-13T07:17:20.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1697638485000,"updatedTime":1718263040000},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"dump/knowledge/==和===.md","localizedDate":"2023年10月18日","autoDesc":true,"excerpt":"\\n<p>相等操作符存在隐式类型转换，在比较前会先进行类型转换再进行比较</p>\\n<p>例如</p>\\n<p>比较字符串和布尔值，会转换为数值再比较</p>\\n<p>比较基本类型和引用类型，会调用引用类型的valueOf获取其原始值再进行比较</p>\\n<p>比较引用类型，会比较其引用指向的内存地址是否相同</p>\\n<p>比较null和undefined会返回true</p>\\n<p>如果比较存在NaN，则会返回false</p>\\n<p>全等操作符不存在类型转换，它是严格相等的，既要类型相同，也要值相同</p>\\n<p>全等操作符因为在使用时存在隐式类型转换，可能暗含一些漏洞，所以在比较null和undefined时适合使用相等，其余情况下适合使用全等</p>"}`);export{u as comp,m as data};
