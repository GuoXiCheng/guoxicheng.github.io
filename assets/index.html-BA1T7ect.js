import{_ as t,a as e,b as a,c as s}from"./wechat-3rsSBYyx.js";import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as r,a as n}from"./app-D4075-pM.js";const d={},c=n('<h1 id="tinycrud-introduction" tabindex="-1"><a class="header-anchor" href="#tinycrud-introduction"><span>TinyCRUD Introduction</span></a></h1><h2 id="basic-introduction" tabindex="-1"><a class="header-anchor" href="#basic-introduction"><span>Basic Introduction</span></a></h2><p>TinyCRUD is a lightweight data storage library based on the Issue API of code hosting platform, which can use Issue as a database table, Issue comments as data table records, and serialize/deserialize data through Issue API to realize data CRUD.</p><h2 id="application-scenarios" tabindex="-1"><a class="header-anchor" href="#application-scenarios"><span>Application Scenarios</span></a></h2><p>TinyCRUD is suitable for small teams or personal projects that need simple and lightweight data storage, but do not want or need to set up a complex database system.</p><h2 id="supported-code-hosting-platforms" tabindex="-1"><a class="header-anchor" href="#supported-code-hosting-platforms"><span>Supported Code Hosting Platforms</span></a></h2><table style="text-align:center;"><tr><td><img src="'+t+'"></td><td><img src="'+e+'"></td><td><img src="'+a+'"></td></tr><tr><td> Github API latest </td><td> Gitlab API v4 </td><td> Gitee API v5 </td></tr></table><h2 id="supported-request-libraries" tabindex="-1"><a class="header-anchor" href="#supported-request-libraries"><span>Supported Request Libraries</span></a></h2><table style="text-align:center;"><tr><td><img src="https://axios-http.com/assets/logo.svg"></td><td><img src="'+s+'"></td></tr><tr><td> axios </td><td> wx（WeChat Mini Program） </td></tr></table>',9),p=[c];function l(h,u){return r(),o("div",null,p)}const y=i(d,[["render",l],["__file","index.html.vue"]]),f=JSON.parse(`{"path":"/dump/en/projects/TinyCRUD-Docs/","title":"TinyCRUD Docs","lang":"zh-CN","frontmatter":{"title":"TinyCRUD Docs","dir":{"link":true},"description":"TinyCRUD Introduction Basic Introduction TinyCRUD is a lightweight data storage library based on the Issue API of code hosting platform, which can use Issue as a database table,...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/dump/en/projects/TinyCRUD-Docs/"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"TinyCRUD Docs"}],["meta",{"property":"og:description","content":"TinyCRUD Introduction Basic Introduction TinyCRUD is a lightweight data storage library based on the Issue API of code hosting platform, which can use Issue as a database table,..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-13T07:17:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-13T07:17:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TinyCRUD Docs\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-13T07:17:20.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Basic Introduction","slug":"basic-introduction","link":"#basic-introduction","children":[]},{"level":2,"title":"Application Scenarios","slug":"application-scenarios","link":"#application-scenarios","children":[]},{"level":2,"title":"Supported Code Hosting Platforms","slug":"supported-code-hosting-platforms","link":"#supported-code-hosting-platforms","children":[]},{"level":2,"title":"Supported Request Libraries","slug":"supported-request-libraries","link":"#supported-request-libraries","children":[]}],"git":{"createdTime":1703656355000,"updatedTime":1718263040000},"readingTime":{"minutes":0.57,"words":172},"filePathRelative":"dump/en/projects/TinyCRUD-Docs/README.md","localizedDate":"2023年12月27日","autoDesc":true,"excerpt":"\\n<h2>Basic Introduction</h2>\\n<p>TinyCRUD is a lightweight data storage library based on the Issue API of code hosting platform, which can use Issue as a database table, Issue comments as data table records, and serialize/deserialize data through Issue API to realize data CRUD.</p>\\n<h2>Application Scenarios</h2>"}`);export{y as comp,f as data};
